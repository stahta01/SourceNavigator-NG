# Makefile.in generated by automake 1.6.3 from Makefile.am.
# @configure_input@

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@
SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_HEADER = $(INSTALL_DATA)
transform = @program_transform_name@
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_alias = @host_alias@
host_triplet = @host@

EXEEXT = @EXEEXT@
OBJEXT = @OBJEXT@
PATH_SEPARATOR = @PATH_SEPARATOR@
AMTAR = @AMTAR@
ANTLR = @ANTLR@
ANTLR_H = @ANTLR_H@
ASM_DEMO = @ASM_DEMO@
ASSEMBLER_DIRS = @ASSEMBLER_DIRS@
AWK = @AWK@
BUG_ADDRESS = @BUG_ADDRESS@
CC = @CC@
CC_FOR_BUILD = @CC_FOR_BUILD@
COB_DEMO = @COB_DEMO@
CPP = @CPP@
CXX = @CXX@
CYGPATH = @CYGPATH@
C_DEMO = @C_DEMO@
DB_INCDIR = @DB_INCDIR@
DB_LIBDIR = @DB_LIBDIR@
DEPDIR = @DEPDIR@
DLG = @DLG@
FOR_DEMO = @FOR_DEMO@
GETTING_STARTED_DIR = @GETTING_STARTED_DIR@
GETTING_STARTED_INDEX = @GETTING_STARTED_INDEX@
GETTING_STARTED_NAME = @GETTING_STARTED_NAME@

HYPER_CFLAGS = @HYPER_CFLAGS@
HYPER_MAIN = @HYPER_MAIN@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
ITCLHDIR = @ITCLHDIR@
ITCL_BUILD_LIB_SPEC = @ITCL_BUILD_LIB_SPEC@
ITCL_LIB_FILE = @ITCL_LIB_FILE@
ITCL_LIB_FULL_PATH = @ITCL_LIB_FULL_PATH@
ITCL_SH = @ITCL_SH@
ITK_BUILD_LIB_SPEC = @ITK_BUILD_LIB_SPEC@
ITK_LIB_FILE = @ITK_LIB_FILE@
ITK_LIB_FULL_PATH = @ITK_LIB_FULL_PATH@
JAVAEXE = @JAVAEXE@
JAVA_PARSER = @JAVA_PARSER@
JAV_DEMO = @JAV_DEMO@
LEX = @LEX@
LEXLIB = @LEXLIB@
MAINT = @MAINT@
MONOP_DEMO = @MONOP_DEMO@
OLDTARFLAG = @OLDTARFLAG@
PACKAGE = @PACKAGE@
PRODUCT_NAME = @PRODUCT_NAME@
PROGRAMMERS_REFERENCE_DIR = @PROGRAMMERS_REFERENCE_DIR@
PROGRAMMERS_REFERENCE_INDEX = @PROGRAMMERS_REFERENCE_INDEX@
PROGRAMMERS_REFERENCE_NAME = @PROGRAMMERS_REFERENCE_NAME@
RANLIB = @RANLIB@
SDK_DIR = @SDK_DIR@
SENDMAIL_PARSER = @SENDMAIL_PARSER@
SN_BOOKS = @SN_BOOKS@
SN_DOCSET = @SN_DOCSET@
SN_GUI_DIR = @SN_GUI_DIR@
SN_LAUNCH_SHELL = @SN_LAUNCH_SHELL@
SN_PLATFORM_DIR = @SN_PLATFORM_DIR@
SN_SDK_EXEC_PREFIX = @SN_SDK_EXEC_PREFIX@
SOCKLIB = @SOCKLIB@
SPLASHFILE = @SPLASHFILE@
STRIP = @STRIP@
SUITE_NAME = @SUITE_NAME@
TAR = @TAR@
TCLCONFIG = @TCLCONFIG@
TCLHDIR = @TCLHDIR@
TCL_BIN_DIR = @TCL_BIN_DIR@
TCL_BUILD_LIB_SPEC = @TCL_BUILD_LIB_SPEC@
TCL_CFLAGS = @TCL_CFLAGS@
TCL_DBGX = @TCL_DBGX@
TCL_DEFS = @TCL_DEFS@
TCL_LD_FLAGS = @TCL_LD_FLAGS@
TCL_LD_SEARCH_FLAGS = @TCL_LD_SEARCH_FLAGS@
TCL_LIBRARY = @TCL_LIBRARY@
TCL_LIBS = @TCL_LIBS@
TCL_LIB_FILE = @TCL_LIB_FILE@
TCL_LIB_FULL_PATH = @TCL_LIB_FULL_PATH@
TCL_LIB_SPEC = @TCL_LIB_SPEC@
TCL_RANLIB = @TCL_RANLIB@
TCL_SHLIB_CFLAGS = @TCL_SHLIB_CFLAGS@
TCL_SHLIB_LD = @TCL_SHLIB_LD@
TIX_BUILD_LIB_SPEC = @TIX_BUILD_LIB_SPEC@
TKCONFIG = @TKCONFIG@
TKHDIR = @TKHDIR@
TK_BUILD_INCLUDES = @TK_BUILD_INCLUDES@
TK_BUILD_LIB_SPEC = @TK_BUILD_LIB_SPEC@
TK_DEFS = @TK_DEFS@
TK_LIBS = @TK_LIBS@
TK_LIB_FILE = @TK_LIB_FILE@
TK_LIB_FULL_PATH = @TK_LIB_FULL_PATH@
TK_LIB_SPEC = @TK_LIB_SPEC@
TK_VERSION = @TK_VERSION@
TK_XINCLUDES = @TK_XINCLUDES@
TK_XLIBSW = @TK_XLIBSW@
USING_GNUPRO_DIR = @USING_GNUPRO_DIR@
USING_GNUPRO_INDEX = @USING_GNUPRO_INDEX@
USING_GNUPRO_NAME = @USING_GNUPRO_NAME@
VERSION = @VERSION@
WIN32LDAPP = @WIN32LDAPP@
WIN32LIBS = @WIN32LIBS@
WINDRES = @WINDRES@
WINFLAGS = @WINFLAGS@
X11ICON = @X11ICON@
YACC = @YACC@
am__include = @am__include@
am__quote = @am__quote@
install_sh = @install_sh@

# Copyright (c) 2000, Red Hat, Inc.
# 
# This file is part of Source-Navigator.
# 
# Source-Navigator is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as published
# by the Free Software Foundation; either version 2, or (at your option)
# any later version.
# 
# Source-Navigator is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
# 
# You should have received a copy of the GNU General Public License along
# with Source-Navigator; see the file COPYING.  If not, write to
# the Free Software Foundation, 59 Temple Place - Suite 330, Boston,
# MA 02111-1307, USA.
# 
AUTOMAKE_OPTIONS = cygnus


# FIXME some of these aren't the right thing.  Eg digging into the Tk
# directory is bad.  For instance, why do we do -Itk/unix and
# -Itk/win?  Because tkTreeTable includes default.h, which relies on a
# file in one of those directories (depending on the build).  Luckily,
# the files have different names.
@MSVC_TRUE@LINK = link -DEBUG $(LDFLAGS) -OUT:$@
@MSVC_FALSE@LINK = $(PURIFY) $(CC) $(LDFLAGS) -o $@
@MSVC_TRUE@TCL_DIR = 

LibUtilsSrc = $(top_srcdir)/misc/libutils
LibUtilsDir = ../misc/libutils
LibUtils = $(LibUtilsDir)/libutils.a
DBUtilsLibDir = ../db
DBUtilsLib = $(DBUtilsLibDir)/libdbutils.a

INCLUDES = $(HYPER_CFLAGS) $(WINFLAGS) -I$(LibUtilsSrc) \
$(TKHDIR) $(TKHDIR)/../unix $(TKHDIR)/../win \
$(TCLHDIR) $(TK_XINCLUDES) \
-I$(top_srcdir)/../itcl/itcl/generic -I$(top_srcdir)/../itcl/itk/generic \
-I$(DB_INCDIR) -I$(top_srcdir)/db -I$(top_srcdir)/../libgui/src \
-I$(top_srcdir)/misc


sdkincludedir = $(datadir)/sdk/include
sdkinclude_HEADERS = sn.h 

bin_PROGRAMS = hyper

hyper_SOURCES = compare.h compare.c dbsym.c exint.c \
recudir.c services.c sninit.c tclxlist.c tkTreeTable.c tcl_high.c \
c_high.c py_high.c ch_high.c j_high.c highlight.c tclfileutils.c


hyper_LDFLAGS = $(WIN32LDAPP)
@MSVC_TRUE@hyper_LDADD = @HYPER_MAIN@ $(LibUtilsDir)/libutils.a \
@MSVC_TRUE@$(DBUtilsLibDir)/libdbutils.a $(DB_LIBDIR)/libdb.a \
@MSVC_TRUE@$(top_builddir)/../libgui/src/libgui.a \
@MSVC_TRUE@$(WIN32LIBS) \
@MSVC_TRUE@$(ITCL_BUILD_LIB_SPEC) $(ITK_BUILD_LIB_SPEC) \
@MSVC_TRUE@$(TIX_BUILD_LIB_SPEC) \
@MSVC_TRUE@$(TK_BUILD_LIB_SPEC) $(TCL_BUILD_LIB_SPEC)

@MSVC_FALSE@hyper_LDADD = @HYPER_MAIN@ -L$(LibUtilsDir) -lutils \
@MSVC_FALSE@-L$(DBUtilsLibDir) -ldbutils -L$(DB_LIBDIR) -ldb \
@MSVC_FALSE@-L$(top_builddir)/../libgui/src -lgui \
@MSVC_FALSE@$(WIN32LIBS) \
@MSVC_FALSE@$(ITCL_BUILD_LIB_SPEC) $(ITK_BUILD_LIB_SPEC) \
@MSVC_FALSE@$(TIX_BUILD_LIB_SPEC) $(TK_BUILD_LIB_SPEC) \
@MSVC_FALSE@$(TCL_BUILD_LIB_SPEC) $(TK_LIBS)

hyper_DEPENDENCIES = @HYPER_MAIN@ $(LibUtils) \
$(DBUtilsLib) $(DB_LIBDIR)/libdb.a \
$(TCL_LIB_FULL_PATH) $(TK_LIB_FULL_PATH) \
$(ITCL_LIB_FULL_PATH) $(ITK_LIB_FULL_PATH)

subdir = hyper
mkinstalldirs = $(SHELL) $(top_srcdir)/../mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
bin_PROGRAMS = hyper$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS)

am_hyper_OBJECTS = compare.$(OBJEXT) dbsym.$(OBJEXT) exint.$(OBJEXT) \
	recudir.$(OBJEXT) services.$(OBJEXT) sninit.$(OBJEXT) \
	tclxlist.$(OBJEXT) tkTreeTable.$(OBJEXT) tcl_high.$(OBJEXT) \
	c_high.$(OBJEXT) py_high.$(OBJEXT) ch_high.$(OBJEXT) \
	j_high.$(OBJEXT) highlight.$(OBJEXT) tclfileutils.$(OBJEXT)
hyper_OBJECTS = $(am_hyper_OBJECTS)

DEFS = @DEFS@
DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)
CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
depcomp =
am__depfiles_maybe =
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)


# FIXME some of these aren't the right thing.  Eg digging into the Tk
# directory is bad.  For instance, why do we do -Itk/unix and
# -Itk/win?  Because tkTreeTable includes default.h, which relies on a
# file in one of those directories (depending on the build).  Luckily,
# the files have different names.
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
CFLAGS = @CFLAGS@
DIST_SOURCES = $(hyper_SOURCES)
HEADERS = $(sdkinclude_HEADERS)

SOURCES = $(hyper_SOURCES)

all: all-am

.SUFFIXES:
.SUFFIXES: .c .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ Makefile.am  $(top_srcdir)/configure.in $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --cygnus  hyper/Makefile
Makefile: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f"; \
	   $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f $(DESTDIR)$(bindir)/$$f"; \
	  rm -f $(DESTDIR)$(bindir)/$$f; \
	done

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
hyper$(EXEEXT): $(hyper_OBJECTS) $(hyper_DEPENDENCIES) 
	@rm -f hyper$(EXEEXT)
	$(LINK) $(hyper_LDFLAGS) $(hyper_OBJECTS) $(hyper_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

.c.o:
	$(COMPILE) -c `test -f '$<' || echo '$(srcdir)/'`$<

.c.obj:
	$(COMPILE) -c `cygpath -w $<`
uninstall-info-am:
sdkincludeHEADERS_INSTALL = $(INSTALL_HEADER)
install-sdkincludeHEADERS: $(sdkinclude_HEADERS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(sdkincludedir)
	@list='$(sdkinclude_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(sdkincludeHEADERS_INSTALL) $$d$$p $(DESTDIR)$(sdkincludedir)/$$f"; \
	  $(sdkincludeHEADERS_INSTALL) $$d$$p $(DESTDIR)$(sdkincludedir)/$$f; \
	done

uninstall-sdkincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(sdkinclude_HEADERS)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(sdkincludedir)/$$f"; \
	  rm -f $(DESTDIR)$(sdkincludedir)/$$f; \
	done

ETAGS = etags
ETAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH
check-am:
check: check-am
all-am: Makefile $(PROGRAMS) $(HEADERS)

installdirs:
	$(mkinstalldirs) $(DESTDIR)$(bindir) $(DESTDIR)$(sdkincludedir)

install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am

distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am: install-sdkincludeHEADERS

install-exec-am: install-binPROGRAMS

install-info:

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

uninstall-am: uninstall-binPROGRAMS uninstall-sdkincludeHEADERS

.PHONY: GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic distclean distclean-compile distclean-generic \
	distclean-tags dvi dvi-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am install-exec \
	install-exec-am install-info install-info-am install-man \
	install-sdkincludeHEADERS install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic tags uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-info-am \
	uninstall-sdkincludeHEADERS


# Must pass TK_DEFS to these compiles.  This is the easiest (and
# arguably best) way to let these files correctly use the Tk internal
# headers.  Of course, they really shouldn't use these headers, but
# that's another problem.

tkTreeTable.$(OBJEXT): tkTreeTable.c tkTreeTable.h
	$(COMPILE) $(TK_DEFS) -c $<

# This target will regenerate .c files from .l files. it
# must never depend on a timestamp for .l files because
# this would fail to compile on an end users system that
# did not have flex installed if the timestamps got hosed
flexgen:
	$(LEX) -t > j_high.c $(LFLAGS) -Pjava_highlight_ $(srcdir)/j_high.l
	$(LEX) -t > py_high.c $(LFLAGS) -Ppy_highlight_ $(srcdir)/py_high.l
	$(LEX) -t > c_high.c $(LFLAGS) -Pc_highlight_ $(srcdir)/c_high.l
	$(LEX) -t > ch_high.c $(LFLAGS) -Pch_highlight_ $(srcdir)/ch_high.l
	$(LEX) -t > tcl_high.c $(LFLAGS) -Ptcl_highlight_ $(srcdir)/tcl_high.l

highlight.$(OBJEXT): highlight.c
	$(COMPILE) $(TK_DEFS) -c $<

sninit.$(OBJEXT): sninit.c
	$(COMPILE) $(TK_DEFS) -c $<

tclfileutils.$(OBJEXT): tclfileutils.c
	$(COMPILE) $(TK_DEFS) -c $<

# Only use cygpath when compiling with VC++

winMain.obj: win/winMain.c
	$(COMPILE) -c `cygpath -w $<`

winMain.o: win/winMain.c
	$(COMPILE) -c $<
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
