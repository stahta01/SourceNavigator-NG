dnl Process this file with autoconf to produce a configure script.
AC_INIT(netlist.h)

dnl Checks for programs.
AC_PROG_CC
AC_PROG_CXX
AC_CHECK_TOOL(STRIP, strip, true)
AC_CHECK_HEADERS(getopt.h)
AC_PROG_INSTALL
AC_CHECK_LIB(dl,main,[DLLIB=-ldl])
AC_SUBST(DLLIB)
AC_CANONICAL_HOST


AC_SUBST(LDFLAGS)
SOLARIS_LDFLAGS="-ldl  -lsocket -lnsl -lm"
LINUX_LDFLAGS="-ldl  -lieee -lm"

AC_SUBST(host_triplet)
host_triplet="$host"


dnl
dnl Parameters used in the definition of CXXFLAGS
dnl only -g for now
dnl
AC_ARG_ENABLE(debug, [  --enable-debug          Set to enable debug symbol table production by the C++ compiler.  Default is on.], 
[case "$enableval" in
yes)
	DEBUG=-g;;
no)
	DEBUG=;;
*)
	DEBUG="$enableval"
esac]
,
DEBUG=-g)

dnl
dnl configure optimization
dnl
AC_ARG_ENABLE(opt, [  --enable-opt            set to no (O0), O1, yes (O2), etc.  Default is O2.],
[case "$enableval" in
yes)
	GNU_OPT=-O2;;
no)    
        GNU_OPT=-O0;;
*)
        GNU_OPT="$enableval"
esac]
,
dnl
dnl defaults if nothing is specified on the configure command line
dnl
GNU_OPT=-O0
)

CXXFLAGS="$GNU_OPT $DEBUG"

#######################
## test for underscores. The vpi module loader in vvm needs to know this
## in order to know the name of the start symbol for the .vpi module.
#######################

AC_MSG_CHECKING("for leading and/or trailing underscores")
cat << EOF > underscore.c
       void underscore(void){}
EOF
$CC -c underscore.c > /dev/null 2>&1

CC_LEADING_UNDERSCORE=no
CC_TRAILING_UNDERSCORE=no

output=`nm underscore.o|grep _underscore 2>&1`
if test ! -z "$output"; then
  CC_LEADING_UNDERSCORE=yes
  AC_DEFINE(NEED_LU)
fi

output=`nm underscore.o|grep underscore_ 2>&1`
if test ! -z "$output"; then
  CC_TRAILING_UNDERSCORE=yes
  AC_DEFINE(NEED_TU)
fi

if test "$CC_LEADING_UNDERSCORE" = yes; then
  AC_DEFINE(WLU)
fi
if test "$CC_TRAILING_UNDERSCORE" = yes; then
  AC_DEFINE(WTU)
fi

rm underscore.c underscore.o

AC_MSG_RESULT("$CC_LEADING_UNDERSCORE $CC_TRAILING_UNDERSCORE")

#######################
## end of test for underscores
#######################

# The -rdynamic flag is used by iverilog when compiling the target,
# to know how to export symbols of the main program to loadable modules
# that are brought in by -ldl
AC_MSG_CHECKING("for -rdynamic compiler flag")

rdynamic=-rdynamic
case "${host}" in

    *-*-netbsd*)
	rdynamic="-Wl,--export-dynamic"
	;;

    *-*-solaris*)
	rdynamic=""
	;;

esac

AC_DEFINE_UNQUOTED(RDYNAMIC,"${rdynamic}")

AC_MSG_RESULT("$RDYNAMIC")

AC_MSG_CHECKING("for platform dependent libraries")
case "${host}" in
*-*-solaris*)
  LDFLAGS="$SOLARIS_LDFLAGS"
  ;;
*-*-linux*)
  LDFLAGS="$LINUX_LDFLAGS"
  ;;
esac
AC_MSG_RESULT("$LDFLAGS")

AC_OUTPUT(Makefile)
