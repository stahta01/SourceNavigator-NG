source testutil.tcl


tcltest::test var-1.0 { var write } {
    m4_parse [save_file f.m4 {
var=1
}]
} {Status: Parsing: f.m4
PAF_FILE;f.m4;m4<>
PAF_GLOB_VAR_DEF;var<>000002.000<>f.m4;2.3<>0x0<>{}<>{}<>{}<>{}
PAF_FILE_SYMBOLS;f.m4<>000002.000<>#<>var<>gv;2.3<>2.0<>2.3<>{}
}

tcltest::test var-1.1 { var write } {
    m4_parse [save_file f.m4 {
my_var="two"
}]
} {Status: Parsing: f.m4
PAF_FILE;f.m4;m4<>
PAF_GLOB_VAR_DEF;my_var<>000002.000<>f.m4;2.6<>0x0<>{}<>{}<>{}<>{}
PAF_FILE_SYMBOLS;f.m4<>000002.000<>#<>my_var<>gv;2.6<>2.0<>2.6<>{}
}

tcltest::test var-1.2 { var write } {
    m4_parse [save_file f.m4 {
my_var=
}]
} {Status: Parsing: f.m4
PAF_FILE;f.m4;m4<>
PAF_GLOB_VAR_DEF;my_var<>000002.000<>f.m4;2.6<>0x0<>{}<>{}<>{}<>{}
PAF_FILE_SYMBOLS;f.m4<>000002.000<>#<>my_var<>gv;2.6<>2.0<>2.6<>{}
}

tcltest::test var-2.1 { var write xref } {
    m4_parse_xref [save_file f.m4 {
var=value
}]
} {PAF_CROSS_REF;#<>GLOBAL<>gv<>#<>var<>gv<>w<>000002<>f.m4;<>
}


tcltest::test var-3.0 { var read } {
    # Parser generates only a read xref
    # when a global variable is read.
    m4_parse [save_file f.m4 {
$var
}]
} {Status: Parsing: f.m4
PAF_FILE;f.m4;m4<>
}


tcltest::test var-4.0 { var read xref } {
    m4_parse_xref [save_file f.m4 {
$var
}]
} {PAF_CROSS_REF;#<>GLOBAL<>gv<>#<>var<>gv<>r<>000002<>f.m4;<>
}

tcltest::test var-4.1 { not a var read } {
    m4_parse_xref [save_file f.m4 {
\$var
}]
} {}





tcltest::test macro-1.0 { macro declaration } {
    m4_parse [save_file f.m4 {
AC_DEFUN([MACRO], [])
}]
} {Status: Parsing: f.m4
PAF_FILE;f.m4;m4<>
PAF_FUNC_DEF;MACRO<>000002.010<>f.m4;2.15<>0x0<>{}<>{}<>{}<>{}
PAF_FILE_SYMBOLS;f.m4<>000002.010<>#<>MACRO<>fu;2.15<>2.10<>2.15<>{}
}

tcltest::test macro-1.1 { macro declaration } {
    m4_parse [save_file f.m4 {
AU_DEFUN([MACRO], [])
}]
} {Status: Parsing: f.m4
PAF_FILE;f.m4;m4<>
PAF_FUNC_DEF;MACRO<>000002.010<>f.m4;2.15<>0x0<>{}<>{}<>{}<>{}
PAF_FILE_SYMBOLS;f.m4<>000002.010<>#<>MACRO<>fu;2.15<>2.10<>2.15<>{}
}

tcltest::test macro-1.2 { macro declaration } {
    m4_parse [save_file f.m4 {
m4_define([MACRO], [])
}]
} {Status: Parsing: f.m4
PAF_FILE;f.m4;m4<>
PAF_FUNC_DEF;MACRO<>000002.011<>f.m4;2.16<>0x0<>{}<>{}<>{}<>{}
PAF_FILE_SYMBOLS;f.m4<>000002.011<>#<>MACRO<>fu;2.16<>2.11<>2.16<>{}
}

tcltest::test macro-1.3 { macro declaration } {
    m4_parse [save_file f.m4 {
AC_DEFUN(MACRO, [])
}]
} {Status: Parsing: f.m4
PAF_FILE;f.m4;m4<>
PAF_FUNC_DEF;MACRO<>000002.009<>f.m4;2.14<>0x0<>{}<>{}<>{}<>{}
PAF_FILE_SYMBOLS;f.m4<>000002.009<>#<>MACRO<>fu;2.14<>2.9<>2.14<>{}
}

tcltest::test macro-1.4 { macro declaration } {
    m4_parse [save_file f.m4 {
AC_DEFUN( MACRO, [])
}]
} {Status: Parsing: f.m4
PAF_FILE;f.m4;m4<>
PAF_FUNC_DEF;MACRO<>000002.010<>f.m4;2.15<>0x0<>{}<>{}<>{}<>{}
PAF_FILE_SYMBOLS;f.m4<>000002.010<>#<>MACRO<>fu;2.15<>2.10<>2.15<>{}
}

tcltest::test macro-1.5 { macro declaration } {
    m4_parse [save_file f.m4 {
AC_DEFUN( [MACRO], [])
}]
} {Status: Parsing: f.m4
PAF_FILE;f.m4;m4<>
PAF_FUNC_DEF;MACRO<>000002.011<>f.m4;2.16<>0x0<>{}<>{}<>{}<>{}
PAF_FILE_SYMBOLS;f.m4<>000002.011<>#<>MACRO<>fu;2.16<>2.11<>2.16<>{}
}

tcltest::test macro-1.6 { macro declaration } {
    m4_parse [save_file f.m4 {
AC_DEFUN(MACRO , [])
}]
} {Status: Parsing: f.m4
PAF_FILE;f.m4;m4<>
PAF_FUNC_DEF;MACRO<>000002.009<>f.m4;2.14<>0x0<>{}<>{}<>{}<>{}
PAF_FILE_SYMBOLS;f.m4<>000002.009<>#<>MACRO<>fu;2.14<>2.9<>2.14<>{}
}

tcltest::test macro-1.7 { macro declaration } {
    m4_parse [save_file f.m4 {
AC_DEFUN([MACRO] , [])
}]
} {Status: Parsing: f.m4
PAF_FILE;f.m4;m4<>
PAF_FUNC_DEF;MACRO<>000002.010<>f.m4;2.15<>0x0<>{}<>{}<>{}<>{}
PAF_FILE_SYMBOLS;f.m4<>000002.010<>#<>MACRO<>fu;2.15<>2.10<>2.15<>{}
}

tcltest::test macro-1.8 { macro declaration } {
    m4_parse [save_file f.m4 {
AC_DEFUN(	[MACRO], [])
}]
} {Status: Parsing: f.m4
PAF_FILE;f.m4;m4<>
PAF_FUNC_DEF;MACRO<>000002.011<>f.m4;2.16<>0x0<>{}<>{}<>{}<>{}
PAF_FILE_SYMBOLS;f.m4<>000002.011<>#<>MACRO<>fu;2.16<>2.11<>2.16<>{}
}

tcltest::test macro-1.9 { macro declaration } {
    m4_parse [save_file f.m4 {
AC_DEFUN([MACRO]	, [])
}]
} {Status: Parsing: f.m4
PAF_FILE;f.m4;m4<>
PAF_FUNC_DEF;MACRO<>000002.010<>f.m4;2.15<>0x0<>{}<>{}<>{}<>{}
PAF_FILE_SYMBOLS;f.m4<>000002.010<>#<>MACRO<>fu;2.15<>2.10<>2.15<>{}
}


tcltest::test macro-2.0 { macro invocation } {
    # Parser generates only a call xref
    # when a macro is invoked

    m4_parse [save_file f.m4 {
MACRO()
}]
} {Status: Parsing: f.m4
PAF_FILE;f.m4;m4<>
}

tcltest::test macro-2.1 { macro invocation xref } {
    m4_parse_xref [save_file f.m4 {
MACRO()
}]
} {PAF_CROSS_REF;#<>GLOBAL<>fu<>#<>MACRO<>fu<>p<>000002<>f.m4;<>
}


tcltest::test comment-1.0 { comment } {
    m4_parse [save_file f.m4 {
#var=1
}]
} {Status: Parsing: f.m4
PAF_FILE;f.m4;m4<>
}

tcltest::test comment-1.1 { comment } {
    m4_parse [save_file f.m4 {
# var=1
}]
} {Status: Parsing: f.m4
PAF_FILE;f.m4;m4<>
}

tcltest::test comment-1.2 { comment } {
    m4_parse [save_file f.m4 {
#	var=1
}]
} {Status: Parsing: f.m4
PAF_FILE;f.m4;m4<>
}

tcltest::test comment-1.3 { comment } {
    m4_parse [save_file f.m4 {
#AC_DEFUN([MACRO], [])
}]
} {Status: Parsing: f.m4
PAF_FILE;f.m4;m4<>
}


tcltest::test comment-2.0 { comment } {
    m4_parse [save_file f.m4 {
dnl var=1
}]
} {Status: Parsing: f.m4
PAF_FILE;f.m4;m4<>
}

tcltest::test comment-2.1 { comment } {
    m4_parse [save_file f.m4 {
dnl	var=1
}]
} {Status: Parsing: f.m4
PAF_FILE;f.m4;m4<>
}

tcltest::test comment-2.2 { not a comment } {
    m4_parse [save_file f.m4 {
dnlvar=1
}]
} {Status: Parsing: f.m4
PAF_FILE;f.m4;m4<>
PAF_GLOB_VAR_DEF;dnlvar<>000002.000<>f.m4;2.6<>0x0<>{}<>{}<>{}<>{}
PAF_FILE_SYMBOLS;f.m4<>000002.000<>#<>dnlvar<>gv;2.6<>2.0<>2.6<>{}
}



# cleanup
file delete f.m4
file delete xout
::tcltest::cleanupTests
return
